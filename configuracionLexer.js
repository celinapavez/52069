import antlr4 from 'antlr4';

const serializedATN = [4,0,13,132,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,5,4,77,8,4,
10,4,12,4,80,9,4,1,5,4,5,83,8,5,11,5,12,5,84,1,6,1,6,5,6,89,8,6,10,6,12,
6,92,9,6,1,6,1,6,1,7,1,7,1,7,3,7,99,8,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,
11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,4,15,116,8,15,11,15,12,15,117,1,15,
1,15,1,16,1,16,1,16,1,16,5,16,126,8,16,10,16,12,16,129,9,16,1,16,1,16,0,
0,17,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,0,17,0,19,0,21,0,23,8,25,9,27,10,29,
11,31,12,33,13,1,0,5,2,0,65,90,97,122,1,0,48,57,5,0,32,33,44,44,46,46,58,
59,63,63,3,0,9,10,13,13,32,32,2,0,10,10,13,13,135,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,23,1,0,
0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,
1,0,0,0,3,49,1,0,0,0,5,57,1,0,0,0,7,67,1,0,0,0,9,73,1,0,0,0,11,82,1,0,0,
0,13,86,1,0,0,0,15,98,1,0,0,0,17,100,1,0,0,0,19,102,1,0,0,0,21,104,1,0,0,
0,23,106,1,0,0,0,25,108,1,0,0,0,27,110,1,0,0,0,29,112,1,0,0,0,31,115,1,0,
0,0,33,121,1,0,0,0,35,36,5,99,0,0,36,37,5,111,0,0,37,38,5,110,0,0,38,39,
5,102,0,0,39,40,5,105,0,0,40,41,5,103,0,0,41,42,5,117,0,0,42,43,5,114,0,
0,43,44,5,97,0,0,44,45,5,99,0,0,45,46,5,105,0,0,46,47,5,111,0,0,47,48,5,
110,0,0,48,2,1,0,0,0,49,50,5,115,0,0,50,51,5,101,0,0,51,52,5,99,0,0,52,53,
5,99,0,0,53,54,5,105,0,0,54,55,5,111,0,0,55,56,5,110,0,0,56,4,1,0,0,0,57,
58,5,118,0,0,58,59,5,101,0,0,59,60,5,114,0,0,60,61,5,100,0,0,61,62,5,97,
0,0,62,63,5,100,0,0,63,64,5,101,0,0,64,65,5,114,0,0,65,66,5,111,0,0,66,6,
1,0,0,0,67,68,5,102,0,0,68,69,5,97,0,0,69,70,5,108,0,0,70,71,5,115,0,0,71,
72,5,111,0,0,72,8,1,0,0,0,73,78,3,17,8,0,74,77,3,17,8,0,75,77,3,19,9,0,76,
74,1,0,0,0,76,75,1,0,0,0,77,80,1,0,0,0,78,76,1,0,0,0,78,79,1,0,0,0,79,10,
1,0,0,0,80,78,1,0,0,0,81,83,3,19,9,0,82,81,1,0,0,0,83,84,1,0,0,0,84,82,1,
0,0,0,84,85,1,0,0,0,85,12,1,0,0,0,86,90,5,34,0,0,87,89,3,15,7,0,88,87,1,
0,0,0,89,92,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,91,93,1,0,0,0,92,90,1,0,
0,0,93,94,5,34,0,0,94,14,1,0,0,0,95,99,3,17,8,0,96,99,3,19,9,0,97,99,3,21,
10,0,98,95,1,0,0,0,98,96,1,0,0,0,98,97,1,0,0,0,99,16,1,0,0,0,100,101,7,0,
0,0,101,18,1,0,0,0,102,103,7,1,0,0,103,20,1,0,0,0,104,105,7,2,0,0,105,22,
1,0,0,0,106,107,5,123,0,0,107,24,1,0,0,0,108,109,5,125,0,0,109,26,1,0,0,
0,110,111,5,61,0,0,111,28,1,0,0,0,112,113,5,59,0,0,113,30,1,0,0,0,114,116,
7,3,0,0,115,114,1,0,0,0,116,117,1,0,0,0,117,115,1,0,0,0,117,118,1,0,0,0,
118,119,1,0,0,0,119,120,6,15,0,0,120,32,1,0,0,0,121,122,5,47,0,0,122,123,
5,47,0,0,123,127,1,0,0,0,124,126,8,4,0,0,125,124,1,0,0,0,126,129,1,0,0,0,
127,125,1,0,0,0,127,128,1,0,0,0,128,130,1,0,0,0,129,127,1,0,0,0,130,131,
6,16,0,0,131,34,1,0,0,0,8,0,76,78,84,90,98,117,127,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class configuracionLexer extends antlr4.Lexer {

    static grammarFileName = "configuracion.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'configuracion'", "'seccion'", "'verdadero'", 
                         "'falso'", null, null, null, "'{'", "'}'", "'='", 
                         "';'" ];
	static symbolicNames = [ null, "CONFIGURACION", "SECCION", "VERDADERO", 
                          "FALSO", "NOMBRE", "NUMERO", "CADENA", "L_LLAVE", 
                          "R_LLAVE", "IGUAL", "PUNTOYCOMA", "WS", "COMENTARIO" ];
	static ruleNames = [ "CONFIGURACION", "SECCION", "VERDADERO", "FALSO", 
                      "NOMBRE", "NUMERO", "CADENA", "CARACTER", "LETRA", 
                      "DIGITO", "SIMBOLO", "L_LLAVE", "R_LLAVE", "IGUAL", 
                      "PUNTOYCOMA", "WS", "COMENTARIO" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

configuracionLexer.EOF = antlr4.Token.EOF;
configuracionLexer.CONFIGURACION = 1;
configuracionLexer.SECCION = 2;
configuracionLexer.VERDADERO = 3;
configuracionLexer.FALSO = 4;
configuracionLexer.NOMBRE = 5;
configuracionLexer.NUMERO = 6;
configuracionLexer.CADENA = 7;
configuracionLexer.L_LLAVE = 8;
configuracionLexer.R_LLAVE = 9;
configuracionLexer.IGUAL = 10;
configuracionLexer.PUNTOYCOMA = 11;
configuracionLexer.WS = 12;
configuracionLexer.COMENTARIO = 13;



